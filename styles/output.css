/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
.relative {
  position: relative;
}
.z-10 {
  z-index: 10;
}
.z-20 {
  z-index: 20;
}
.-mt-\[400px\] {
  margin-top: calc(400px * -1);
}
.mb-\[400px\] {
  margin-bottom: 400px;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.h-\[100px\] {
  height: 100px;
}
.h-\[400px\] {
  height: 400px;
}
.h-screen {
  height: 100vh;
}
.min-h-screen {
  min-height: 100vh;
}
.w-\[100px\] {
  width: 100px;
}
.w-\[400px\] {
  width: 400px;
}
.w-full {
  width: 100%;
}
.max-w-\[600px\] {
  max-width: 600px;
}
.max-w-full {
  max-width: 100%;
}
.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}
.grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}
.flex-col {
  flex-direction: column;
}
.items-center {
  align-items: center;
}
.justify-center {
  justify-content: center;
}
.justify-normal {
  justify-content: normal;
}
.space-x-\[100px\] {
  :where(& > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(100px * var(--tw-space-x-reverse));
    margin-inline-end: calc(100px * calc(1 - var(--tw-space-x-reverse)));
  }
}
.rounded-\[25px\] {
  border-radius: 25px;
}
.border {
  border-style: var(--tw-border-style);
  border-width: 1px;
}
.pl-\[200px\] {
  padding-left: 200px;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-space-x-reverse: 0;
      --tw-border-style: solid;
    }
  }
}
